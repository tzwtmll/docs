import{_ as n,X as s,Y as a,a0 as e}from"./framework-decf3de5.js";const t={},p=e(`<h1 id="nestjs" tabindex="-1"><a class="header-anchor" href="#nestjs" aria-hidden="true">#</a> Nestjs</h1><h2 id="_1-准备" tabindex="-1"><a class="header-anchor" href="#_1-准备" aria-hidden="true">#</a> 1. 准备</h2><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> @nestjs/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建项目</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nest new project-name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>命令与快捷命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nest g co<span class="token punctuation">(</span>controller<span class="token punctuation">)</span> mode
nest g s<span class="token punctuation">(</span>service<span class="token punctuation">)</span> mode
nest g mo<span class="token punctuation">(</span>module<span class="token punctuation">)</span> mode
<span class="token comment"># 直接创建文件</span>
nest g res<span class="token punctuation">(</span>resource<span class="token punctuation">)</span> mode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安装依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @nestjs/typeorm typeorm mysql2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-语法缩写" tabindex="-1"><a class="header-anchor" href="#_2-语法缩写" aria-hidden="true">#</a> 2. 语法缩写</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> <span class="token literal-property property">userService</span><span class="token operator">:</span> UserService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-rest-client-调试工具" tabindex="-1"><a class="header-anchor" href="#_3-rest-client-调试工具" aria-hidden="true">#</a> 3. rest client 调试工具</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-参数获取" tabindex="-1"><a class="header-anchor" href="#_4-参数获取" aria-hidden="true">#</a> 4. 参数获取</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">login</span><span class="token punctuation">(</span>@<span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> req<span class="token punctuation">)</span>
res<span class="token punctuation">.</span>body   <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
res<span class="token punctuation">.</span>params <span class="token operator">/</span><span class="token operator">:</span>id
res<span class="token punctuation">.</span>query <span class="token operator">?</span>id<span class="token operator">=</span><span class="token number">1</span>

@<span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;:id&quot;</span><span class="token punctuation">)</span>
<span class="token function">login</span><span class="token punctuation">(</span>@<span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> res<span class="token punctuation">)</span>
res<span class="token punctuation">.</span>params <span class="token comment">// 不加(&quot;id&quot;)</span>
params <span class="token comment">// id</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-控制器" tabindex="-1"><a class="header-anchor" href="#_5-控制器" aria-hidden="true">#</a> 5. 控制器</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  Request   Headers  HttpCode
 @<span class="token function">HttpCode</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
 <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">@<span class="token function">Headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> headers</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     headers
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-连接数据库" tabindex="-1"><a class="header-anchor" href="#_6-连接数据库" aria-hidden="true">#</a> 6. 连接数据库</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i <span class="token operator">--</span>save @nestjs<span class="token operator">/</span>typeorm typeorm  mysql2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span> <span class="token comment">//数据库类型</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token comment">//账号</span>
      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token comment">//密码</span>
      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token comment">//host</span>
      <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3306</span><span class="token punctuation">,</span> <span class="token comment">//</span>
      <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;portal&#39;</span><span class="token punctuation">,</span> <span class="token comment">//库名</span>
      <span class="token literal-property property">entities</span><span class="token operator">:</span> <span class="token punctuation">[</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/**/*.entity{.ts,.js}&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//实体文件</span>
      <span class="token literal-property property">synchronize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//synchronize字段代表是否自动将实体类同步到数据库</span>
      <span class="token literal-property property">retryDelay</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token comment">//重试连接数据库间隔</span>
      <span class="token literal-property property">retryAttempts</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">//重试连接数据库的次数</span>
      <span class="token literal-property property">autoLoadEntities</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//如果为true,将自动加载实体</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-引用实体" tabindex="-1"><a class="header-anchor" href="#_7-引用实体" aria-hidden="true">#</a> 7. 引用实体</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>test.module.ts

import { TypeOrmModule } from &#39;@nestjs/typeorm&#39;;
import { Test } from &#39;@nestjs/testing&#39;;

imports: [TypeOrmModule.forFeature([Test])],
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在自己的模块中引入</span>
TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Test<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实体" tabindex="-1"><a class="header-anchor" href="#实体" aria-hidden="true">#</a> 实体</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  Column<span class="token punctuation">,</span>
  CreateDateColumn<span class="token punctuation">,</span>
  Entity<span class="token punctuation">,</span>
  PrimaryGeneratedColumn<span class="token punctuation">,</span>
  Generated<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span>
@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ------------------- 各种修饰器需要注意</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
  @<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 自增</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;varchar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">255</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 列</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;varchar&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>
    <span class="token literal-property property">select</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 过滤字段，不被用户可读</span>
    <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token string">&#39;注释&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nullable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 能否为空</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> string

  @<span class="token function">Generated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 自动生成</span>
  <span class="token literal-property property">uuid</span><span class="token operator">:</span> string

  @<span class="token function">CreateDateColumn</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;timestamp&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 时间戳 自动生成</span>
  <span class="token literal-property property">createTime</span><span class="token operator">:</span> Date

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;enum&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">pdd</span><span class="token operator">:</span> number

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&#39;simple-array&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 存放数组</span>
  <span class="token literal-property property">names</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&#39;simple-json&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 存放 json</span>
  <span class="token literal-property property">json</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> number <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="主列" tabindex="-1"><a class="header-anchor" href="#主列" aria-hidden="true">#</a> 主列</h4><p>自动递增的主键</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token literal-property property">id</span><span class="token operator">:</span>number
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>自动递增 uuid</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@PrimaryGeneratedColumn(&quot;uuid&quot;)
id:number
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>列类型</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&quot;varchar&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">length</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> string

    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;int&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number

    @<span class="token function">CreateDateColumn</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&quot;timestamp&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token literal-property property">create_time</span><span class="token operator">:</span>Date
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动生成列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">Generated</span><span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">)</span>
<span class="token literal-property property">uuid</span><span class="token operator">:</span>string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>枚举列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&quot;enum&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">enum</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">xx</span><span class="token operator">:</span>string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>列选项</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&quot;varchar&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;ipaaa&quot;</span><span class="token punctuation">,</span> <span class="token comment">//数据库表中的列名</span>
        <span class="token literal-property property">nullable</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//在数据库中使列NULL或NOT NULL。 默认情况下，列是nullable：false</span>
        <span class="token literal-property property">comment</span><span class="token operator">:</span><span class="token string">&quot;注释&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">select</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">//定义在进行查询时是否默认隐藏此列。 设置为false时，列数据不会显示标准查询。 默认情况下，列是select：true</span>
        <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span> <span class="token comment">//加数据库级列的DEFAULT值</span>
        <span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//将列标记为主要列。 使用方式和@ PrimaryColumn相同。</span>
        <span class="token literal-property property">update</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//指示&quot;save&quot;操作是否更新列值。如果为false，则只能在第一次插入对象时编写该值。 默认值为&quot;true&quot;</span>
        <span class="token literal-property property">collation</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//定义列排序规则。</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token literal-property property">ip</span><span class="token operator">:</span>string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>simple-array 列类型</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  @<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&#39;simple-array&#39;</span><span class="token punctuation">)</span>
  <span class="token literal-property property">names</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>simple-json列类型</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  @<span class="token function">PrimaryGeneratedColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number

  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&#39;simple-json&#39;</span><span class="token punctuation">)</span>
  <span class="token literal-property property">profile</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">nickname</span><span class="token operator">:</span> string <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-操作实体" tabindex="-1"><a class="header-anchor" href="#_8-操作实体" aria-hidden="true">#</a> 8. 操作实体</h2><h3 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> mysql</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>entity<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 查</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>entity<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 增</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>entity<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 删</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>entity<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 改</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>entity<span class="token punctuation">.</span><span class="token function">sava</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// 保存</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token parameter">@<span class="token function">InjectRepository</span><span class="token punctuation">(</span>Test<span class="token punctuation">)</span> <span class="token keyword">private</span> readonly
     <span class="token literal-property property">user</span><span class="token operator">:</span> Repository<span class="token operator">&lt;</span>Test<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">createTestDto</span><span class="token operator">:</span> CreateTestDto</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 操作数据库</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 赋值</span>
    data<span class="token punctuation">.</span>name <span class="token operator">=</span> createTestDto<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
    <span class="token comment">// 保存</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-守卫" tabindex="-1"><a class="header-anchor" href="#_9-守卫" aria-hidden="true">#</a> 9. 守卫</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g res guard
在 guard 中
nest g gu role/guard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制器守卫" tabindex="-1"><a class="header-anchor" href="#控制器守卫" aria-hidden="true">#</a> 控制器守卫</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RoleGuard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./role/role.guard&#39;</span><span class="token punctuation">;</span>
@<span class="token function">UseGuards</span><span class="token punctuation">(</span>RoleGuard<span class="token punctuation">)</span>  <span class="token comment">//导入装饰器</span>
@<span class="token function">controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局守卫" tabindex="-1"><a class="header-anchor" href="#全局守卫" aria-hidden="true">#</a> 全局守卫</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">useGlobalGuards</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RoleGuard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义守卫" tabindex="-1"><a class="header-anchor" href="#自定义守卫" aria-hidden="true">#</a> 自定义守卫</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>SetMetadata<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>
@<span class="token function">UseGuards</span><span class="token punctuation">(</span>RoleGuard<span class="token punctuation">)</span>

@<span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
@<span class="token function">SetMetadata</span><span class="token punctuation">(</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//自定义信息</span>
 <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span>  <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Reflector<span class="token punctuation">.</span>get<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程" tabindex="-1"><a class="header-anchor" href="#流程" aria-hidden="true">#</a> 流程</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>先请求
再拦截
再守卫 先可以到这里 @<span class="token function">SetMetadata</span><span class="token punctuation">(</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-自定义装饰器" tabindex="-1"><a class="header-anchor" href="#_10-自定义装饰器" aria-hidden="true">#</a> 10. 自定义装饰器</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nest g d role
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SetMetadata <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Role</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">SetMetadata</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> ReqUrl <span class="token operator">=</span> <span class="token function">createParamDecorator</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">ctx</span><span class="token operator">:</span> ExecutionContext</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> req <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">switchToHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getRequest<span class="token operator">&lt;</span>Request<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token operator">=</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// @ReqUrl(&quot;params&quot;)</span>
    <span class="token keyword">return</span> req<span class="token punctuation">.</span>url<span class="token punctuation">;</span><span class="token comment">// @Role() url 接受返回值</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@<span class="token function">SetMetadata</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span>@<span class="token function">Role</span><span class="token punctuation">(</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_11-接口文档-swgger" tabindex="-1"><a class="header-anchor" href="#_11-接口文档-swgger" aria-hidden="true">#</a> 11. 接口文档 swgger</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i @nestjs/swagger swagger-ui-express
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="api-说明" tabindex="-1"><a class="header-anchor" href="#api-说明" aria-hidden="true">#</a> api 说明</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 配置 swgger 请求添加token 具有局部 单个 全局几种形式
@ApiBearerAuth(&#39;jwt&#39;)
@ApiOperation({summary: &#39;登录&#39;})// 描述
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文档创建" tabindex="-1"><a class="header-anchor" href="#文档创建" aria-hidden="true">#</a> 文档创建</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>main<span class="token punctuation">.</span>ts

<span class="token keyword">const</span> swagger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DocumentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addBearerAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 全局验证</span>
  <span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&#39;pdd博客后台&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&#39;博客后台&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span><span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> document <span class="token operator">=</span> SwaggerModule<span class="token punctuation">.</span><span class="token function">createDocument</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> swagger<span class="token punctuation">)</span>
<span class="token comment">// 地址</span>
SwaggerModule<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token string">&#39;/api-docs&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">,</span> document<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>controller<span class="token punctuation">.</span>ts

<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiTags，ApiOperation，ApiParam，ApiResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/swagger&#39;</span><span class="token punctuation">;</span>
@<span class="token function">controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
@<span class="token function">ApiTags</span><span class="token punctuation">(</span><span class="token string">&#39;分组名称&#39;</span><span class="token punctuation">)</span>
@<span class="token function">ApiBearerAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//局部验证</span>
@<span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
@<span class="token function">ApiOperation</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 描述</span>
	<span class="token literal-property property">summary</span><span class="token operator">:</span><span class="token string">&quot;get接口&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">description</span><span class="token operator">:</span><span class="token string">&quot;描述&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
@<span class="token function">ApiParam</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 描述动态参数</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">description</span><span class="token operator">:</span><span class="token string">&quot;分页信息&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
@<span class="token function">ApiResponse</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">//返回信息</span>
	<span class="token literal-property property">state</span><span class="token operator">:</span><span class="token string">&quot;403&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">description</span><span class="token operator">:</span><span class="token string">&quot;小黑子&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回例子" tabindex="-1"><a class="header-anchor" href="#返回例子" aria-hidden="true">#</a> 返回例子</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create <span class="token operator">-</span> guard<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>ts

<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/swagger&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">CreateGuardDto</span> <span class="token punctuation">{</span>
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token string">&#39;达达&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string
  @<span class="token function">ApiProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">example</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> number
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加权限" tabindex="-1"><a class="header-anchor" href="#添加权限" aria-hidden="true">#</a> 添加权限</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//全局添加权限</span>
<span class="token punctuation">.</span><span class="token function">addBearerAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12-jwt-注册-签名-验证" tabindex="-1"><a class="header-anchor" href="#_12-jwt-注册-签名-验证" aria-hidden="true">#</a> 12. jwt(注册&gt;签名&gt;验证)</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 密码加密 passport策略</span>
npm install <span class="token operator">--</span>save @nestjs<span class="token operator">/</span>passport passport passport<span class="token operator">-</span>local
npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev @types<span class="token operator">/</span>passport<span class="token operator">-</span>local

<span class="token comment">// token验证 jwt策略  //依赖包</span>
npm install <span class="token operator">--</span>save @nestjs<span class="token operator">/</span>passport passport @nestjs<span class="token operator">/</span>jwt passport<span class="token operator">-</span>jwt
npm install @types<span class="token operator">/</span>passport<span class="token operator">-</span>jwt <span class="token operator">--</span>save<span class="token operator">-</span>dev <span class="token comment">//ts提示</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="包的使用" tabindex="-1"><a class="header-anchor" href="#包的使用" aria-hidden="true">#</a> 包的使用</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 守卫</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthGuard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/passport&#39;</span><span class="token punctuation">;</span>

@<span class="token function">UseGuards</span><span class="token punctuation">(</span><span class="token function">AuthGuard</span><span class="token punctuation">(</span><span class="token string">&#39;JWT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 守卫地点(全局/单个接口)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// jwt服务</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> JwtService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/jwt&#39;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>JwtService<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">//生成token</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>JwtService<span class="token punctuation">.</span><span class="token function">validata</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// 解析token</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 导入模块，注册</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> JwtModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/jwt&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> JwtStrategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./jwt.strategy&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 自己定义</span>
@<span class="token function">Module</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    JwtModule<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&#39;p<wbr>rocess.env.SECRET&#39;</span><span class="token punctuation">,</span> <span class="token comment">//密钥</span>
      <span class="token literal-property property">signOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token string">&#39;1h&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>，
  <span class="token literal-property property">providers</span><span class="token operator">:</span> <span class="token punctuation">[</span>JwtStrategy<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 提供策略</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//jwt.strategy.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ExtractJwt<span class="token punctuation">,</span> Strategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;passport-jwt&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> PassportStrategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/passport&#39;</span>

@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">JwtStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">PassportStrategy</span><span class="token punctuation">(</span>Strategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 签发</span>
      <span class="token literal-property property">jwtFromRequest</span><span class="token operator">:</span> ExtractJwt<span class="token punctuation">.</span><span class="token function">fromAuthHeaderAsBearerToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ignoreExpiration</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token comment">//   secretOrKey: p<wbr>rocess.env.SECRETt, // 为什么不可用</span>
      <span class="token literal-property property">secretOrKey</span><span class="token operator">:</span> jwtConstants<span class="token punctuation">.</span>secret<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 读取</span>
  <span class="token keyword">async</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">payload</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> payload
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="获取-token-中的信息" tabindex="-1"><a class="header-anchor" href="#获取-token-中的信息" aria-hidden="true">#</a> 获取 token 中的信息</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fn(@Request() req){
	req.user
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置-jwt-密钥" tabindex="-1"><a class="header-anchor" href="#配置-jwt-密钥" aria-hidden="true">#</a> 配置 jwt 密钥</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> jwtConstants <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">//加密密钥，不建议明文 .env</span>
  <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&#39;secretKey&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="passport-策略" tabindex="-1"><a class="header-anchor" href="#passport-策略" aria-hidden="true">#</a> passport 策略</h5><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>对用户密码加密&quot;全部人&quot;不可知的策略
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_13-环境配置" tabindex="-1"><a class="header-anchor" href="#_13-环境配置" aria-hidden="true">#</a> 13. 环境配置</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i @nestjs/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>xxx <span class="token comment">// 但是不知道为什么不能再模块之前解析</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_14-文件上传与下载" tabindex="-1"><a class="header-anchor" href="#_14-文件上传与下载" aria-hidden="true">#</a> 14 .文件上传与下载</h2><h3 id="上传" tabindex="-1"><a class="header-anchor" href="#上传" aria-hidden="true">#</a> 上传</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i @nestjs/platform-express 自带

npm i multer @types/multer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//upload.module.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> MulterModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> diskStorage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;multer&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path/posix&#39;</span><span class="token punctuation">;</span>

@<span class="token function">Module</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 注册</span>
    MulterModule<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">storage</span><span class="token operator">:</span> <span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">//静态文件，直接可以访问，不要静态文件名 /images.1.ong</span>
        <span class="token literal-property property">destination</span><span class="token operator">:</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/images&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> fileFlx <span class="token operator">=</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> fileExt <span class="token operator">=</span> file<span class="token punctuation">.</span>originalname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileFlx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileExt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestExpressApplication <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span>create<span class="token punctuation">)</span> <span class="token operator">&lt;</span> NestExpressApplication <span class="token operator">&gt;</span> AppModule
<span class="token comment">// 注册静态文件</span>
app<span class="token punctuation">.</span><span class="token function">useStaticAssets</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3><h5 id="download" tabindex="-1"><a class="header-anchor" href="#download" aria-hidden="true">#</a> download</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token comment">// __dirname ,上一级目录文件dir</span>
<span class="token function">download</span><span class="token punctuation">(</span><span class="token parameter">@<span class="token function">Res</span><span class="token punctuation">(</span><span class="token punctuation">)</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;../public/images/tp1_1671085852553.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="流传输" tabindex="-1"><a class="header-anchor" href="#流传输" aria-hidden="true">#</a> 流传输</h6><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i compressing

  @<span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">async</span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token parameter">@<span class="token function">Res</span><span class="token punctuation">(</span><span class="token punctuation">)</span> res<span class="token operator">:</span> Response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../public/images/tp1_1671085852553.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> tarStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zip<span class="token punctuation">.</span>Stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> tarStream<span class="token punctuation">.</span><span class="token function">addEntry</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/octer-stream&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Disposition&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;attachment=pdd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tarStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端接收</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> resurl <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span> <span class="token comment">// 生成的地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">正在开发中</p></div>`,104),o=[p];function c(i,l){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","index.html.vue"]]);export{u as default};
