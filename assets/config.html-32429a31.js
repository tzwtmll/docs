import{_ as n,X as s,Y as a,a0 as t}from"./framework-decf3de5.js";const e="/docs/assets/images/error1.jpg",p="/docs/assets/images/success.jpg",l={},i=t(`<h1 id="webpack-config-js-配置" tabindex="-1"><a class="header-anchor" href="#webpack-config-js-配置" aria-hidden="true">#</a> Webpack.config.js 配置</h1><div class="hint-container tip"><p class="hint-container-title">学习 webpack 主要学习的就是配置文件，重头戏开始</p></div><h2 id="entry-入口" tabindex="-1"><a class="header-anchor" href="#entry-入口" aria-hidden="true">#</a> entry 入口</h2><ul><li>写入路径是我们开始构建的第一个文件，比如 react 就是从 index 文件开始构建的，因为 index 文件中我们构建了第一个 dom</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">//指定入口(默认也是这个地址)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>我们试着允许一下构建 <code>npm run build</code><img src="`+e+`" alt="123" loading="lazy"></p><ul><li>会发现报出这个错误，这是因为现在我们对 react 的环境进行配置，webpack 是不认识<code>div</code>这些东西的，接下来我们进行 react 环境配置</li></ul></div><h2 id="module-加载-loader" tabindex="-1"><a class="header-anchor" href="#module-加载-loader" aria-hidden="true">#</a> module 加载 loader</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里提一下面试题中经常问到的问题，loader 与 plugin 的区别</p><ul><li>因为 webpack 只能解析 js 文件，对 css，png，md 等等一些其他文件是无法进行解析的</li><li>索引我们需要 loader 加载器将文件转化为 webpack 能够解析的内容</li><li>而 plugin 是提供一种功能</li></ul></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(js|jsx)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这里与 babel.config.js 作用一样，文件权限更高</span>
            <span class="token literal-property property">preset</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@babel/preset-react&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@babel/preset-env&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>再次允许 <code>run run build</code>发现打包成功了</li><li>多出一个 dist 文件，就就是我们打包出来的文件</li><li>现在我们只需在 dist 根目录创建一个 index.html，再使用 live server(vscode 下载插件) 打开即可</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 打包后会自动引入index.js 这也是你的入口文件，默认名称为main可以自定义 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="恭喜你成功创建一个react项目" tabindex="0" loading="lazy"><figcaption>恭喜你成功创建一个react项目</figcaption></figure></div>',10),o=[i];function c(r,u){return s(),a("div",null,o)}const k=n(l,[["render",c],["__file","config.html.vue"]]);export{k as default};
